using System.Text.RegularExpressions;
string input = "";
string pattern = @"\<\>([A-z]+)\<\>([0-9]+)[-]{2}([0-9]+(\.[0-9]+)*)";
double totalCost = 0;
var gear = new List<string>();
while (input != "Run!")
{
    input = Console.ReadLine();
    if (Regex.IsMatch(input, pattern))
    {
        MatchCollection matches = Regex.Matches(input, pattern);
        gear.Add(matches[0].Groups[1].ToString());
        totalCost += double.Parse(matches[0].Groups[3].ToString()) * double.Parse(matches[0].Groups[2].ToString());
    }
}
    Console.WriteLine(totalCost > 0 ? "Gear bought:" + "\n" + string.Join("\n", gear) + "\n" + $"Total cost: {totalCost:F2}" : "Gear bought:" + "\n" + $"Total cost: {totalCost:F2}");
