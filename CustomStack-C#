using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading;

namespace ConsoleApp2
{
    public class CustomStack<T>
    {
        private T[] items;
        private T[] itemsCopy;
        private T returnedItem;
        public int count;
        public int Count
        {
            get { return count; }
            private set { count = value; }
        }
        private const int INITIAL_CAPACITY = 4;
        
        public CustomStack()
        {
            items = new T[INITIAL_CAPACITY];
            itemsCopy = new T[items.Length];
            count = 0;
        }
        public void Push(T item)
        {

            if (items.Count(S => S != null && string.Equals(S, 0) != true) == items.Length)
            {
                Array.Resize(ref items, items.Length * 2);
            }
            items[items.Count(S => S != null && string.Equals(S, 0) != true)] = item;
            count++;
        }
        public T Pop()
        {
            if (count == 0)
            {
                throw new Exception("Stack is empty. Please Insert items!");
            }
            returnedItem = items[count - 1];
            if(count > 1) {Array.Copy(items, items, count - 2); }
            else { Array.Copy(items, items, 0); }
            count--;
            return returnedItem;
        }
        public T Peek()
        {
            if (count == 0)
            {
                throw new Exception("Stack is empty. Please Insert items!");
            }
            return items[count-1];
            

        }
    }
}
